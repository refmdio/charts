fullnameOverride: ""
nameOverride: ""

imagePullSecrets: []

api:
  replicaCount: 2
  image:
    repository: ghcr.io/refmdio/refmd/api
    tag: latest
    pullPolicy: IfNotPresent
  healthPath: /api/health
  service:
    type: ClusterIP
    port: 8888
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: refmd.example.com
        paths:
          - path: /api
            pathType: Prefix
    tls: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  extraEnv: []
  env:
    RUST_ENV: production
    API_PORT: "8888"
    FRONTEND_URL: https://refmd.example.com
    BACKEND_URL: https://refmd.example.com
    CLUSTER_MODE: "true"
    STORAGE_BACKEND: s3
    STORAGE_ROOT: uploads
    S3_ENDPOINT: ""
    S3_BUCKET: refmd
    S3_REGION: us-east-1
    S3_USE_PATH_STYLE: "true"
    REDIS_URL: ""
    REDIS_STREAM_PREFIX: yrs
    REDIS_MIN_MESSAGE_LIFETIME_MS: "120000"
    REDIS_TASK_DEBOUNCE_MS: "5000"
    REDIS_AWARENESS_TTL_MS: "45000"
    REDIS_STREAM_MAX_LEN: "4096"
    UPLOADS_DIR: /data/uploads
    UPLOAD_MAX_BYTES: "26214400"
    RUST_LOG: api=info,axum=info,tower_http=info
    PLUGINS_DIR: /app/plugins
  secrets:
    JWT_SECRET: change-me-please
    ENCRYPTION_KEY: change-me-please
    S3_ACCESS_KEY: refmd
    S3_SECRET_KEY: refmd-minio-secret
  existingSecret: ""
  persistence:
    data:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi
    plugins:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 1Gi

app:
  replicaCount: 2
  image:
    repository: ghcr.io/refmdio/refmd/app
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: refmd.example.com
        paths:
          - path: /
            pathType: Prefix
    tls: []
  env:
    VITE_API_BASE_URL: https://refmd.example.com
  extraEnv: []
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgres:
  enabled: true
  image:
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
  auth:
    database: refmd
    username: refmd
    password: refmd
  service:
    type: ClusterIP
    port: 5432
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  existingSecret: ""

redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 1Gi
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

minio:
  enabled: true
  image:
    repository: quay.io/minio/minio
    tag: latest
    pullPolicy: IfNotPresent
  auth:
    rootUser: refmd
    rootPassword: refmd-minio-secret
  service:
    type: ClusterIP
    port: 9000
    consolePort: 9001
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 10Gi
  podAnnotations: {}
  podLabels: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  existingSecret: ""

minioSetup:
  enabled: true
  image:
    repository: quay.io/minio/mc
    tag: latest
    pullPolicy: IfNotPresent
  bucket: refmd
  policy: download
  backoffLimit: 5

serviceAccount:
  create: true
  annotations: {}
  name: ""

podSecurityContext: {}
securityContext: {}

livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 10
