{{- if .Values.minio.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "refmd.fullname" . }}-minio
  labels:
    {{- include "refmd.componentLabels" (dict "component" "minio" "context" .) | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "refmd.componentLabels" (dict "component" "minio" "context" .) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "refmd.componentLabels" (dict "component" "minio" "context" .) | nindent 8 }}
        {{- with .Values.minio.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.minio.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: minio
          image: "{{ .Values.minio.image.repository }}:{{ .Values.minio.image.tag }}"
          imagePullPolicy: {{ .Values.minio.image.pullPolicy }}
          args: ["server", "/data", "--console-address", ":{{ .Values.minio.service.consolePort }}"]
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-minio" (include "refmd.fullname" .)) .Values.minio.existingSecret }}
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-minio" (include "refmd.fullname" .)) .Values.minio.existingSecret }}
                  key: MINIO_ROOT_PASSWORD
          ports:
            - name: api
              containerPort: {{ .Values.minio.service.port }}
              protocol: TCP
            - name: console
              containerPort: {{ .Values.minio.service.consolePort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            {{- toYaml .Values.minio.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          {{- if .Values.minio.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "refmd.fullname" . }}-minio
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.minio.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minio.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.minio.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
